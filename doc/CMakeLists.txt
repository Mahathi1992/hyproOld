# Quick self-configuration if only doc is built
if("${PROJECT_NAME}" STREQUAL "")
	cmake_minimum_required (VERSION 2.8 FATAL_ERROR)
	project(HyPro-doxygen NONE)
	include(FindDoxygen)
endif()

find_package(Doxygen)

# Configure doxygen settings file

set(DOXYGEN_OUTPUT_DIR ${PROJECT_BINARY_DIR}/doxygen )

set(ADDITIONAL_INCLUDES_DOXYGEN ${${PROJECT_NAME}_INCLUDE_DIRS})
get_target_property(INCLUDE COCOA_SHARED INTERFACE_INCLUDE_DIRECTORIES)
set(ADDITIONAL_INCLUDES_DOXYGEN ${ADDITIONAL_INCLUDES_DOXYGEN} ${INCLUDE})
get_target_property(INCLUDE GLPK_STATIC INTERFACE_INCLUDE_DIRECTORIES)
set(ADDITIONAL_INCLUDES_DOXYGEN ${ADDITIONAL_INCLUDES_DOXYGEN} ${INCLUDE})
get_target_property(INCLUDE ANTLR4_STATIC INTERFACE_INCLUDE_DIRECTORIES)
set(ADDITIONAL_INCLUDES_DOXYGEN ${ADDITIONAL_INCLUDES_DOXYGEN} ${INCLUDE})
string(REPLACE ";" " " ADDITIONAL_INPUTS_STRING "${ADDITIONAL_INCLUDES_DOXYGEN}")

message("additional doxygen includes are: ${ADDITIONAL_INCLUDES_DOXYGEN}")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxygen.in ${CMAKE_CURRENT_BINARY_DIR}/Doxygen @ONLY)

add_custom_target(doc
    ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxygen
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    COMMENT "Generating API documentation with Doxygen" VERBATIM
)
