env:
  global:
   - secure: "VrgSZAgTRTdH1rq0OHXHtArOA5SyLsJX9YA9O5c+PSXI/drMjc3pGsTIK3NA7xcyGaEIT+DjzV36yxvAz/3uurYkFtiz/sl1suziy6nSNBqvQSE01lBU9GnqHpkPg6/alnijG0Bf3KvXTdw5MmRaK+f9corNJAa+s1sP0rP7WMQ="

before_install:
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

language: cpp
branches:
  only:
  - master
  - alpha

# Environment variables
env:
  global:
    - GH_REPO_NAME: hypro
    - DOXYFILE: $TRAVIS_BUILD_DIR/build/doc/Doxygen
    - GH_REPO_REF: github.com/hypro/hypro.git

notifications:
  email:
    recipients:
      - stefan.schupp@cs.rwth-aachen.de
  slack:
    rooms:
      - hypro:v2n2cgATRJJYPctLTL1MSfOn#github

sudo: required

cache:
  apt: true
  directories:
    - $HOME/usr/
    - $HOME/.sonar/cache
    - build/resources

addons:
  apt:
    sources: &sources_base
      - boost-latest
      - ubuntu-toolchain-r-test
    packages: &packages_base
      - libboost1.55-all-dev
      - libeigen3-dev
      - libgmp-dev
      - libgtest-dev
      - uuid-dev
      - openjdk-9-jre
      - g++-6

matrix:
  include:
    #- os: linux
    #  compiler: gcc
    #  env: COMPILER=g++-4.9
    - os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
          sources: [*sources_base]
          packages: [*packages_base, g++-5, doxygen]
      env: COMPILER=g++-5 FLAGS=-DCREATE_DOC=ON
    - os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
          sources: [*sources_base]
          packages: [*packages_base, g++-6, lcov]
      env: COMPILER=g++-6 FLAGS=-DHYPRO_COVERAGE=ON
    - os: linux
      dist: trusty
      compiler: clang
      addons:
        sonarcloud:
          organization: "hypro-github"
          token:
            secure: "ISgh4qcPIZhB/oVqkvRVHwYTwpD0HqxkmOP3nETL3Sy06UFQmHkZCsnkZ30w5bBquMqPQ4vvIUKGatIAHXjtQiv8tqSwTAQ2r9iG+hrHpnEXZRB/7ZH4f26zqUCe7tkAf8fFz3O0lZ7Njkt6EDj/ynBtq82RMyPtBsQH/tzCel0UB1jhbK9AAepn4Aq5oW5wxBjXXxrPIqBIUddgbHr48IVfTtB4G0SpEqKhm56FHWG5vcsaB4+cH+v67OYs/3+HfrFZD2kkGPGxj4317Q83ZlcIp/bwKiETV8ez+8z8YRD/J/QKbmrole0M5T5KeNAOdetS9d0RhNKnygFMx75cDSfE7OXys5fhheOdXsLljgvoWqP3FOc7HMeAs/rn/SLrbZlQe5DucyyeQI9u2/elKntmuPfLOQvvX6suwJM7avSEndhrGcdE5x9Z9Shy4GDU4YCmpxRYlfcRpwQK7dn5KpkRLUB9FrgtGRroGdW7XRbFFmXNMJKmDUXLqWx5Ses8pEFY37rBpGi50NcRHzl/ZCAkXboYSS7x1b6hcwNL3w0SfWXbCkuna8/DFwdX7hvDNxiafyZX3GdsXpvQffgbtlZZUSlPbWakzVhV6cZptcV0V0/2HVP+m+azMRt3lbI3l2dfmWhq8l3fJJfkD/D0FsKMD3xVfqZT+xZIYxyWMy0="
        apt:
          sources: [*sources_base, llvm-toolchain-precise-3.6]
          packages: [*packages_base, clang-3.6, lcov libc++-dev libc++abi-dev]
      env: COMPILER=clang++-3.6 TASK=sonarcloud FLAGS=-DHYPRO_COVERAGE=ON
    - os: linux
      dist: trusty
      compiler: clang
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-precise-3.7]
          packages: [*packages_base, clang-3.7 libc++abi-dev libc++-dev]
      env: COMPILER=clang++-3.7
    - os: linux
      dist: trusty
      compiler: clang
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-precise-3.8]
          packages: [*packages_base, clang-3.8 libc++abi-dev libc++-dev]
      env: COMPILER=clang++-3.8
    #- os: osx
    #  osx_image: xcode6.4
    #  compiler: clang
    #  env: COMPILER=clang++
    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: COMPILER=clang++
    - os: osx
      osx_image: xcode8
      compiler: clang
      env: COMPILER=clang++
    - os: osx
      osx_image: xcode8.2
      compiler: clang
      env: COMPILER=clang++

before_install:
  - cd .travis/ && source setupTravis.sh && cd ../
  - sudo motion update || echo 'up to date'

#install:
#  - git clone https://github.com/smtrat/carl.git && cd carl && mkdir build && cd build && cmake -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release .. && make resources && make lib_carl VERBOSE=1

script:
  - cd ${TRAVIS_BUILD_DIR}
  - .travis/build.sh
  #- mkdir build && cd build && cmake $FLAGS -DCMAKE_CXX_COMPILER=$COMPILER .. && make resources && make VERBOSE=1
  #- cat build/resources/antlr_build/src/antlr4cpp-stamp/antlr4cpp-configure-out.log
  #- cat build/resources/antlr_build/src/antlr4cpp-stamp/antlr4cpp-configure-err.log
  #- make test

# Generate and deploy documentation
after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - chmod +x .travis/buildDoc.sh
  - ./.travis/buildDoc.sh
  # coveralls
  - chmod +x processCoverage.sh
  - ./processCoverage.sh
